##### Part 1 #####
# Re-analyze the raw ChIP-Seq data from Inagaki et al., 2017 (PMID 28100676)

# Download the following samples from DDBJ (accession DRA005154):
# wt_H3 (DRR072816, DRR072831, DRR072846, DRR072861)
# wt_H3K4me1 (DRR072817, DRR072832, DRR072847, DRR072862)
# wt_H3K4me2 (DRR072818, DRR072833, DRR072848, DRR072863)
# wt_H3K4me3 (DRR072819, DRR072834, DRR072849, DRR072864)
# wt_H3K9me2 (DRR072820, DRR072835, DRR072850, DRR072865)
# For each sample, pool the relevant Fastq files, e.g.:
bzcat DRR072816.fastq.bz2 DRR072831.fastq.bz2 DRR072846.fastq.bz2 DRR072861.fastq.bz2 | gzip > wt_H3.fq.gz
# Adapter trimming was skipped because the read length (50 bp) was small compared to the average insertion size (250 bp);
# Alignment to TAIR10:
for file in *fq.gz; do echo $file && STAR --genomeDir /index/tair10/star --readFilesIn $file --runThreadN 4 --outFileNamePrefix ${file/.fq.gz/_star_} --outSAMmultNmax 1 --alignEndsType Local --readFilesCommand zcat; done
# Convert SAM files to sorted BAM:
for file in *sam; do echo $file && samtools view -hu $file | samtools sort - -o ${file/.sam/_sorted.bam} && rm $file; done
# Filter out multimapper reads:
for file in *sorted.bam; do echo $file && samtools view -h -q 10 $file -o ${file/.bam/_mapq10.bam}; done
# Run MACS2 on BAM files:
ctrl="wt_h3.bam"; for file in *bam; do; [ "$file" != "$ctrl" ] && echo $file && macs2 -t $file -c $ctrl -n ../macs_out/${file/.bam/} -g 1.35e+08 -m 3,50 --bdg > ../macs_out/${file/.bam/_log.txt} 2>&1; done
# Remove unnecessary files from the MACS2 output:
rm *model.r *pvalue.bdg *qvalue.bdg *control_lambda.bdg
# Compress Bedgraph files generated by MACS2:
for file in *bdg; do echo $file && gzip $file; done


##### Part 2 #####
# Re-analyze the PolII ChIP-Seq data from Liu et al., 2016 (PMID 27225844)

# Download the following samples from NCBI SRA:
# PolII (SRR2626466)
# Input (SRR2626465)
# H3K27me3 (SRR2626464)
# H3 (SRR2626463)
for acc in SRR2626466 SRR2626465 SRR2626464 SRR2626463; do echo $acc && fastq-dump --gzip $acc; done
# Adapter trimming:
for file in *fastq.gz; do echo $file && trim_galore --max_n 3 --no_report_file $file; done
# Alignment to TAIR10:
for file in *fq.gz; do echo $file && STAR --genomeDir /index/tair10/star --readFilesIn $file --runThreadN 4 --outFileNamePrefix ${file/.fq.gz/_star_} --outSAMmultNmax 1 --alignEndsType Local --readFilesCommand zcat; done
# Convert SAM files to sorted BAM:
for file in *sam; do echo $file && samtools view -hu $file | samtools sort - -o ${file/.sam/_sorted.bam} && rm $file; done
# Filter out multimapper reads:
for file in *sorted.bam; do echo $file && samtools view -h -q 10 $file -o ${file/.bam/_mapq10.bam}; done
# Run MACS2 on BAM files:
macs2 -t polII.bam -c input.bam -n ../macs_out/polII -g 1.35e+08 -m 3,50 --bdg > ../macs_out/polII_log.txt 2>&1
macs2 -t h3k27me3.bam -c h3.bam -n ../macs_out/h3k27me3 -g 1.35e+08 -m 3,50 --bdg > ../macs_out/h3k27me3_log.txt 2>&1
# Remove unnecessary files from the MACS2 output:
rm *model.r *pvalue.bdg *qvalue.bdg *control_lambda.bdg
# Compress Bedgraph files generated by MACS2:
for file in *bdg; do echo $file && gzip $file; done


##### Part 3 #####
# Re-analyze the ChIP-Seq data from Luo et al., 2013 (PMID 22962860)

# Download the following samples from DDBJ (http://trace.ddbj.nig.ac.jp/DRASearch/submission?acc=SRA010097):
# H3K4me2 (SRR037789, SRR037790)
# H3K4me3 (SRR037791, SRR037792)
# H3K9Ac (SRR037879, SRR037879)
# H3K9me2 (SRR037879, SRR037794)
# H3K18Ac (SRR037710)
# H3K27me1 (SRR037788)
# H3K27me3 (SRR037881)
# H3K36me2 (SRR037785)
# H3K36me3 (SRR037786)
# H3 (SRR037787, SRR037882, SRR037883)
# Convert SRA files to fastq.gz:
for file in *sra; do echo $file && fastq-dump --gzip $file; done
# For each sample, pool the relevant Fastq files, e.g.:
zcat SRR037795.fastq.gz SRR037796.fastq.gz SRR037884.fastq.gz SRR037885.fastq.gz | gzip > Input.csfastq.gz
# Observe that this dataset was sequenced on ABI SOLiD, hence the alignment has to be done in the color space mode by Bowtie1;
# Build the color space index of TAIR10:
cd /index/tair10/bt1
bowtie-build -C TAIR10.26.dna.genome.fa TAIR10_cs
# Run Bowtie1:
for file in *csfastq.gz; do echo $file && bowtie -C -p 4 --best -S /index/tair10/bt1/TAIR10_cs $file ${file/.csfastq.gz/.sam}; done
# Remove unmapped reads, convert to sorted BAM:
for file in *sam; do echo $file && samtools view -h -F 4 $file | samtools sort - -o ${file/.sam/_sorted.bam} && rm $file; done
# Run MACS2 on BAM files:
ctrl="H3.bam"; for file in H3K*bam; do echo $file && macs2 -t $file -c $ctrl -n ../macs_out/${file/.bam/} -g 1.35e+08 -m 3,50 --bdg > ../macs_out/${file/.bam/_log.txt} 2>&1; done
# Compress Bedgraph files generated by MACS2:
for file in *bdg; do echo $file && gzip $file; done

##### Part 4 #####
# Change the format of GRO-Seq data from Liu et al., 2018 (PMID 29379150)

# Download the following samples (as "plus" and "minus" BigWig files) from NCBI GEO:
# wt_rep1 (GSM2667813)
# wt_rep2 (GSM2667814)
# Convert BigWig to bedGraph (required kentUtils):
for file in *bw; do echo $file && bigWigToBedGraph $file ${file/.bw/.bg}; done
# Modify the chromosome names:
for file in *bg; do echo $file && sed 's/chr6/chrMt/;s/chr7/chrPt/;s/chr//' $file > ${file/.bg/.bedgraph}; done
# Combine "plus" and "minus" files:
for file1 in *fw.bedgraph; do file2=${file1/fw/rev} && outfile=${file1/fw.bedgraph/fw_rev.bg.gz} && echo $file1 "+" $file2 "=" $outfile && awk 'BEGIN{OFS="\t"}{print $1,$2,$3,"-"$4}' $file2 | cat $file1 - | sort -k1,1 -k2,2n | sed '1i track type=bedGraph color=0,100,200 altColor=200,100,0' | gzip > $outfile; done
